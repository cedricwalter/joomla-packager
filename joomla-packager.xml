<?xml version="1.0"?>
<project name="joomla-packager" default="clean" basedir=".">

    <tstamp>
        <format property="DATE" pattern="%Y-%m-%d"/>
    </tstamp>

    <!-- TODO move to properties-->
    <!-- TODO move to properties-->
    <!--<property file="build/config/build.properties" />-->
    <property name="repository.dir" value="C:\Users\cedric\Dropbox\galaxiis.com\httpdocs\repository"/>
    <property name="jed.dir" value="C:\Users\cedric\Dropbox\galaxiis.com\httpdocs\jed"/>
    <property name="showcase.dir" value="C:\Users\cedric\Dropbox\galaxiis.com\subdomains\showcase"/>
    <property name="joomla.dir" value="C:\Users\cedric\Dropbox\phpstart\www\dev"/>

    <!-- http://www.zachleat.com/web/using-phing-to-automate-javascript-and-css-minimization/ -->
    <taskdef classname="yuicompressor.yuicompressorTask" name="yuicompressor"/>

    <target name="package.all" description="build all package"
            depends="clean,package.premium30,package.premium25,package.free30,package.free25">
    </target>

    <target name="package.premium30" description="build the package">
        <phingcall target="build">
            <property name="packageType" value=""/>
            <property name="isJoomla30" value="1"/>
            <property name="isJoomla25" value="0"/>
            <property name="joomlaID" value="j33_j34"/>

            <property name="isPremium" value="1"/>
            <property name="isFree" value="0"/>
            <property name="disabled" value="false"/>

            <property name="phase" value="package"/>
        </phingcall>
    </target>
    <target name="package.premium25" description="build the package">
        <phingcall target="build">
            <property name="packageType" value=""/>
            <property name="isJoomla30" value="0"/>
            <property name="isJoomla25" value="1"/>
            <property name="joomlaID" value="j25"/>

            <property name="isPremium" value="1"/>
            <property name="isFree" value="0"/>
            <property name="disabled" value="false"/>

            <property name="phase" value="package"/>
        </phingcall>
    </target>

    <target name="package.free30" description="build the package">
        <phingcall target="build">
            <property name="packageType" value="-free"/>
            <property name="isJoomla30" value="1"/>
            <property name="isJoomla25" value="0"/>
            <property name="joomlaID" value="j33_j34"/>

            <property name="isPremium" value="0"/>
            <property name="isFree" value="1"/>
            <property name="disabled" value="true"/>

            <property name="phase" value="package"/>
        </phingcall>
    </target>
    <target name="package.free25" description="build the package">
        <phingcall target="build">
            <property name="packageType" value="-free"/>
            <property name="isJoomla30" value="0"/>
            <property name="isJoomla25" value="1"/>
            <property name="joomlaID" value="j25"/>

            <property name="isPremium" value="0"/>
            <property name="isFree" value="1"/>
            <property name="disabled" value="true"/>

            <property name="phase" value="package"/>
        </phingcall>
    </target>

    <target name="deploy.all" depends="clean,deploy.premium,deploy.free">
    </target>

    <target name="deploy.premium" depends="clean">
        <phingcall target="build">
            <property name="packageType" value=""/>
            <property name="isJoomla30" value="1"/>
            <property name="isJoomla25" value="0"/>
            <property name="joomlaID" value="j33_j34"/>

            <property name="isPremium" value="1"/>
            <property name="isFree" value="0"/>
            <property name="disabled" value="false"/>

            <property name="phase" value="deploy"/>
        </phingcall>
    </target>

    <target name="deploy.free" depends="clean">
        <phingcall target="build">
            <property name="packageType" value="-free"/>
            <property name="isJoomla30" value="1"/>
            <property name="isJoomla25" value="0"/>
            <property name="joomlaID" value="j34_j34"/>

            <property name="isPremium" value="0"/>
            <property name="isFree" value="1"/>
            <property name="disabled" value="true"/>

            <property name="phase" value="deploy"/>
        </phingcall>
    </target>

    <target name="build" depends="clean" hidden="true">
        <property name="currentVersion" value="${itsVersion}"/>
        <!--<property name="currentVersion" value="${itsVersion}${packageType}"/>-->

        <property name="filename" value="pkg_${itsShortID}_${joomlaID}_${itsVersion}${packageType}.zip"/>
        <property name="delivery.dir" value="${temp}\${itsShortID}_${itsVersion}${packageType}"/>
        <property name="packages.dir" value="${temp}\pkg_${itsShortID}_${joomlaID}_${itsVersion}${packageType}"/>
        <property name="delivery.file" value="${delivery.dir}/../${filename}"/>

        <mkdir dir="${packages.dir}"/>
        <echo message="Running build.xml. Assembling"/>
        <phingcall target="doComponents"/>
        <phingcall target="doPlugins"/>
        <phingcall target="doModules"/>
        <phingcall target="doLibraries"/>
        <phingcall target="doCreateManifest"/>
        <phingcall target="doCreateRelease"/>

        <if>
            <equals arg1="${phase}" arg2="deploy" />
            <then>
                <phingcall target="doMoveToRepository"/>
                <phingcall target="createChangelog"/>
                <phingcall target="updateJedUpdate"/>
            </then>
        </if>
    </target>

    <target name="yuicompressor" description="build the package" depends="clean"  hidden="true">
        <yuicompressor inputfiles="${build.srcdir}/js/_files.php" outputcombined="${build.deploydir}/js/all.js" outputmin="${build.deploydir}/js/all-min.js"/>
    </target>

    <target name="doMoveToShowcase" hidden="true">
        <echo message="Copy all files to showcase in ${showcase.dir}"/>

        <phingcall target="copyIfDirExist">
            <property name="from" value="administrator/components/com_${itsShortID}"/>
            <property name="to" value="${showcase.dir}/administrator/components/com_${itsShortID}"/>
        </phingcall>
        <phingcall target="copyIfDirExist">
            <property name="from" value="components/com_${itsShortID}"/>
            <property name="to" value="${showcase.dir}/components/com_${itsShortID}"/>
        </phingcall>

        <!--<phingcall target="copyIfDirExist">-->
            <!--<property name="from" value="${delivery.dir}"/>-->
            <!--<property name="to" value="${showcase.dir}"/>-->
        <!--</phingcall>-->
    </target>

    <target name="doComponents" hidden="true">
        <foreach list="${itsComponents}" param="componentShortID" target="doComponent"/>
    </target>

    <target name="doPlugins" hidden="true">
        <foreach list="${itsContentPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="content"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsAuthenticationPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="authentication"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsCaptchaPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="captcha"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsEditorsPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="editors"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsEditorsXtdPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="editors-xtd"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsExtensionPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="extension"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsFinderPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="finder"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsQuickiconPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="quickicon"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsSearchPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="search"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsSystemPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="system"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsUserPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="user"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
        <foreach list="${itsXmlrpcPlugins}" param="pluginID" target="doPlugin">
            <property name="type" value="xmlrpc"/>
            <property name="package.buildType" value="${package.buildType}"/>
        </foreach>
    </target>
    <target name="doModules" hidden="true">
        <foreach list="${itsModules}" param="moduleID" target="doModule"/>
    </target>
    <target name="doLibraries" hidden="true">
        <foreach list="${itsLibraries}" param="libraryID" target="doLibrary"/>
    </target>

    <target name="clean">
        <echo message="Running Cleaning"/>
        <phingcall target="deleteDirIfExist">
            <param name="dir" value="${delivery.dir}"/>
        </phingcall>
        <delete file="${delivery.file}"/>
    </target>

    <target name="doCreateRelease" hidden="true">
        <echo message="creating ${delivery.file}"/>
        <zip destfile="${delivery.file}">
            <fileset dir="${packages.dir}">
                <include name="*.zip"/>
                <include name="pkg_${itsShortID}.xml"/>
            </fileset>
        </zip>
        <!--<delete dir="${packages.dir}"/>-->
        <!--<delete dir="${delivery.dir}"/>-->
    </target>

    <target name="doMoveToRepository" hidden="true">
        <echo message="moving ${delivery.file}"/>
        <mkdir dir="${repository.dir}/${itsShortID}${packageType}/${itsVersion}"/>
        <phingcall target="copyIfFileExist">
            <property name="file" value="${delivery.file}"/>
            <property name="to" value="${repository.dir}/${itsShortID}${packageType}/${itsVersion}"/>
        </phingcall>
        <echo message="DELETING ${temp}\${filename}"/>
        <delete file="${temp}\${filename}"/>
    </target>

    <target name="createChangelog" hidden="true">
        <touch file="${repository.dir}/${itsShortID}/${itsVersion}/CHANGELOG"/>
    </target>

    <target name="createChangelogFree" hidden="true">
        <touch file="${repository.dir}/${itsShortID}-free/${itsVersion}/CHANGELOG"/>
    </target>

    <target name="doCreateManifest" hidden="true">
        <echo message="creating pkg_${itsShortID}.xml"/>
        <!--
                <echo file="${packages.dir}/pkg_${itsShortID}.xml" append="true">
                   ideally generate this file with a template
                           </echo>
                <copy file="pkg_${itsShortID}.xml" todir="${packages.dir}/" overwrite="true"/> -->
        <copy file="${manifestLocation}" todir="${packages.dir}/" overwrite="true">
            <filterchain refid="filterchain"/>
        </copy>
    </target>

    <target name="doLibrary" hidden="true">
        <echo message="preparing ${libraryID}"/>
        <copy todir="${delivery.dir}/libraries/${libraryID}" overwrite="true">
            <fileset dir="${joomla.dir}/libraries/${libraryID}" includes="**/*"></fileset>
            <filterchain refid="filterchain"/>
        </copy>

        <phingcall target="copyComponentLanguages">
            <property name="file" value="lib_${libraryID}.ini"/>
            <property name="to" value="${delivery.dir}/libraries/${libraryID}/language/"/>
        </phingcall>
        <phingcall target="copyComponentLanguages">
            <property name="file" value="lib_${libraryID}.sys.ini"/>
            <property name="to" value="${delivery.dir}/libraries/${libraryID}/language/"/>
        </phingcall>

        <!-- Optional Media -->
        <phingcall target="copyIfDirExist">
            <property name="from" value="${joomla.dir}/media/${libraryID}"/>
            <property name="to" value="${delivery.dir}/libraries/${libraryID}"/>
        </phingcall>

        <echo message="packaging ${libraryID}"/>
        <zip destfile="${packages.dir}/lib_${libraryID}.zip" basedir="${delivery.dir}/libraries/${libraryID}"/>
    </target>

    <target name="doComponent" hidden="true">
        <property name="componentID" value="com_${componentShortID}"/>

        <property name="delivery.base" value="${delivery.dir}/${componentID}/"/>
        <property name="delivery.admin" value="${delivery.base}/administrator/components/${componentID}"/>
        <property name="delivery.site" value="${delivery.base}/components/${componentID}"/>
        <property name="base.admin" value="${joomla.dir}/administrator/components/${componentID}"/>
        <property name="base.site" value="${joomla.dir}/components/${componentID}"/>

        <echo message="preparing ${componentID}"/>

        <!-- Optional Languages -->
        <phingcall target="copyAdminLanguages">
            <property name="file" value="${componentID}.ini"/>
            <property name="to" value="${delivery.base}/administrator/language/"/>
        </phingcall>
        <phingcall target="copyComponentLanguages">
            <property name="file" value="${componentID}.ini"/>
            <property name="to" value="${delivery.base}/language/"/>
        </phingcall>

        <!-- Optional Media -->
        <phingcall target="copyIfDirExist">
            <property name="from" value="${joomla.dir}/media/${componentID}"/>
            <property name="to" value="${delivery.base}/media/${componentID}"/>
        </phingcall>
        <!-- Optional /images/ -->
        <phingcall target="copyIfDirExist">
            <property name="from" value="${joomla.dir}/images/${componentID}"/>
            <property name="to" value="${delivery.base}/images/${componentID}"/>
        </phingcall>

        <!-- Frontend -->
        <copy todir="${delivery.site}" overwrite="true">
            <fileset dir="${base.site}" includes="**/*.*"></fileset>
            <filterchain refid="filterchain"/>
        </copy>
        <!-- Backend -->
        <copy todir="${delivery.admin}" overwrite="true">
            <fileset dir="${base.admin}" includes="**/*.*"></fileset>
            <filterchain refid="filterchain"/>
        </copy>

        <move file="${delivery.admin}/${componentShortID}.xml" tofile="${delivery.base}/${componentShortID}.xml" overwrite="true"/>

        <echo message="packaging ${componentID}"/>
        <zip destfile="${packages.dir}/${componentID}.zip" basedir="${delivery.dir}/${componentID}">
            <fileset dir="${delivery.dir}/${componentID}" includes="**/*"/>
        </zip>
    </target>


    <target name="doPlugin" hidden="true">
        <echo message="preparing plugin ${pluginID} of type ${type}"/>

        <!-- step 1-->
        <copy todir="${delivery.dir}/plugins/${type}/${pluginID}" overwrite="true">
            <fileset dir="${joomla.dir}/plugins/${type}/${pluginID}" includes="**/*.*"></fileset>
            <filterchain refid="filterchain"/>
        </copy>

        <!-- Optional Media -->
        <if>
            <equals arg1="${package.buildType}" arg2="showcase" />
            <then>
                <phingcall target="copyIfDirExist">
                    <property name="from" value="${joomla.dir}/media/plg_${type}_${pluginID}"/>
                    <property name="to" value="${delivery.dir}/media/plg_${type}_${pluginID}"/>
                </phingcall>
            </then>
            <else>
                <phingcall target="copyIfDirExist">
                    <property name="from" value="${joomla.dir}/media/plg_${type}_${pluginID}"/>
                    <property name="to" value="${delivery.dir}/plugins/${type}/${pluginID}/plg_${type}_${pluginID}"/>
                </phingcall>
            </else>
        </if>

        <!-- Optional Languages -->
        <!-- are copied at step 1-->
        <echo message="packaging plugin ${pluginID} of type ${type}"/>
        <zip destfile="${packages.dir}/plg_${type}_${pluginID}.zip" basedir="${delivery.dir}/plugins/${type}/${pluginID}">
            <fileset dir="${delivery.dir}/plugins/${type}/${pluginID}" includes="**/*"/>
        </zip>
    </target>


    <target name="doModule" hidden="true">
        <echo message="preparing ${moduleID}"/>
        <copy todir="${delivery.dir}/modules/${moduleID}" overwrite="true">
            <fileset dir="${joomla.dir}/modules/${moduleID}" includes="**/*.*"></fileset>
            <filterchain refid="filterchain"/>
        </copy>

        <!-- Optional Languages -->
        <phingcall target="copyModuleLanguages">
            <property name="file" value="${moduleID}.ini"/>
            <property name="to" value="${delivery.dir}/modules/${moduleID}"/>
        </phingcall>
        <phingcall target="copyModuleLanguages">
            <property name="file" value="${moduleID}.sys.ini"/>
            <property name="to" value="${delivery.dir}/modules/${moduleID}"/>
        </phingcall>

        <!-- Optional Media -->
        <phingcall target="copyIfDirExist">
            <property name="from" value="${joomla.dir}/media/${moduleID}"/>
            <property name="to" value="${delivery.dir}/modules/${moduleID}/${moduleID}"/>
        </phingcall>

        <echo message="packaging ${moduleID}"/>
        <zip destfile="${packages.dir}/${moduleID}.zip" basedir="${delivery.dir}/modules/${moduleID}">
            <fileset dir="${delivery.dir}/modules/${moduleID}" includes="**/*"/>
        </zip>
    </target>


    <!-- TODO use the same pattern directory for both, check what joomla recommend -->
    <target name="copyComponentLanguages" hidden="true">
        <foreach list="${itsLanguages}" param="language" target="copyIfFileExist">
            <property name="file" value="${joomla.dir}/language/${language}/${language}.${file}"/>
            <property name="to" value="${to}/${language}"/>
        </foreach>
    </target>

    <target name="copyModuleLanguages" hidden="true">
        <foreach list="${itsLanguages}" param="language" target="copyIfFileExist">
            <property name="file" value="${joomla.dir}/language/${language}/${language}.${file}"/>
            <property name="to" value="${to}"/>
        </foreach>
    </target>

    <target name="copyAdminLanguages" hidden="true">
        <foreach list="${itsLanguages}" param="language" target="copyIfFileExist">
            <property name="file" value="${joomla.dir}/administrator/language/${language}/${language}.${file}"/>
            <property name="to" value="${delivery.base}/administrator/language/${itsLanguages}"/>
        </foreach>
    </target>

    <target name="copyLanguage" hidden="true">
        <foreach list="${itsLanguages}" param="language" target="copyIfFileExist">
            <property name="file" value="${joomla.dir}/language/${language}/${language}.${file}"/>
            <property name="to" value="${delivery.base}/language/${itsLanguages}"/>
        </foreach>
    </target>

    <target name="copyIfDirExist" hidden="true">
        <if>
            <available file='${from}' type='dir'/>
            <then>
                <copy todir="${to}" overwrite="true">

                    <!--TODO here build filter that prefer *.min.js and *.min.css over -js and -css
                     or better run yuicompressor -->
                    <fileset dir="${from}" includes="**/*.*"></fileset>
                    <filterchain refid="filterchain"/>
                </copy>
            </then>
        </if>
    </target>

    <target name="deleteDirIfExist" hidden="true">
        <if>
            <available file='${dir}' type='dir'/>
            <then>
                <delete dir="${dir}" includeemptydirs="true" verbose="true" failonerror="true"/>
            </then>
        </if>
    </target>

    <target name="copyIfFileExist" hidden="true">
        <echo message="Copy if file exist ${file} to ${to}"/>
        <if>
            <available file='${file}' type='file'/>
            <then>
                <copy file="${file}" todir="${to}" overwrite="true">
                    <filterchain refid="filterchain"/>
                </copy>
            </then>
        </if>
    </target>

    <target name="updateJedUpdate" hidden="true">
        <echo message="copying ${jedUpdateFile}"/>
        <mkdir dir="${jed.dir}"/>
        <phingcall target="copyIfFileExist">
            <property name="file" value="${jedUpdateFile}"/>
            <property name="to" value="${jed.dir}"/>
        </phingcall>
    </target>


    <filterchain id="filterchain">
        <filterreader classname="preprocessor.PreProcessorFilter">
            <param name="premium" value="${isPremium}"/>
            <param name="free" value="${isFree}"/>
            <param name="joomla25" value="${isJoomla25}"/>
            <param name="joomla30" value="${isJoomla30}"/>

            <param name="macrodir" value="preprocessor/macros"/>
        </filterreader>
        <replacetokens begintoken="%%" endtoken="%%">
            <token key="shortId" value="${itsShortID}"/>
            <token key="version" value="${currentVersion}"/>
            <token key="licensedTo" value="${licensedTo}"/>
            <token key="licenseId" value="${licenseId}"/>
            <token key="copyright" value="${copyright}"/>
            <token key="package" value="${package}"/>
            <token key="subpackage" value="${subpackage}"/>
            <token key="date" value="${DATE}"/>
            <token key="disableForFreeVersion" value="${isFree}"/>
            <token key="creationDate" value="${DATE}"/>
            <token key="disabled" value="${disabled}"/>

        </replacetokens>
    </filterchain>

    <fileset dir="${delivery.dir}" id="phpfiles">
        <include name="*.php"/>
        <include name="**/*.php"/>
    </fileset>
    <target name="checkSyntaxErrors" hidden="true">
        <phplint>
            <fileset refid="phpfiles"/>
        </phplint>
    </target>

</project>